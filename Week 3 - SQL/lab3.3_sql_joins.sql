
use sakila;

# 1. List the number of films per category.
select name, count(film_id) as count
from film
left join film_category
using(film_id)
left join category
using(category_id)
group by name
order by count desc;

# 2. Retrieve the store ID, city, and country for each store.
select store_id, city_id, country_id
from store
left join address
using(address_id)
left join city
using(city_id)
group by store_id;

# 3.  Calculate the total revenue generated by each store in dollars.
select store_id, sum(amount) as revenue
from payment
left join staff
using(staff_id)
left join store
using(store_id)
group by store_id;

# 4.  Determine the average running time of films for each category.
select name, round(avg(length),2) as avg_length
from film
left join film_category
using(film_id)
left join category
using(category_id)
group by name
order by avg_length desc;

# 5.  Identify the film categories with the longest average running time.
select name, round(avg(length),2) as avg_length
from film
left join film_category
using(film_id)
left join category
using(category_id)
group by name
order by avg_length desc
limit 7;

# 6.  Display the top 10 most frequently rented movies in descending order.
select title, count(rental_id) as count
from rental
left join inventory
using(inventory_id)
left join film
using(film_id)
group by title
order by count desc
limit 10;

# 7. Determine if "Academy Dinosaur" can be rented from Store 1.
select CASE WHEN (
	select inventory_id
		from inventory
		left join film
		using(film_id)
		where title = 'Academy Dinosaur' and store_id = 1
        limit 1
	) IS NOT NULL
THEN 'Yes, the requested film is available in Store 1'
ELSE 'No, the requested film is not available in Store 1'
END AS CheckExistance;

/* Alternative solution
select if(inventory_id, concat('Academy Dinosaur #',inventory_id,' is available in Store 1'),'') as inventory
	from inventory
	left join film
	using(film_id)
	where title = 'Academy Dinosaur' and store_id = 1;
*/

# 8. Provide a list of all distinct film titles, along with their availability status in the inventory.
# Include a column indicating whether each title is 'Available' or 'NOT available.' Note that there are 42 titles that
# are not in the inventory, and this information can be obtained using a `CASE` statement combined with `IFNULL`."

select film_id, title, (CASE WHEN count(inventory_id)=0
	THEN 'Does not exist in inventory' ELSE 'Is in inventory' END) AS in_inventory,
	if(count(return_date)<>count(rental_id),'NOT available','Available') as available
from film
left join inventory
using(film_id)
left join rental
using(inventory_id)
group by film_id, title
order by film_id desc;

select *
from film
left join inventory
using(film_id)
left join rental
using(inventory_id)
order by film_id desc;




select *
from rental;
#where return_date is null
